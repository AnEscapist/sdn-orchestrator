# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: libvirt.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='libvirt.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\rlibvirt.proto\">\n\x10\x42lockPullRequest\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x0c\n\x04\x62\x61se\x18\x03 \x01(\t\"7\n\x0b\x43opyRequest\x12\x0f\n\x07vm_name\x18\x01 \x01(\t\x12\x17\n\x0fimage_file_name\x18\x02 \x01(\t\"&\n\x08Response\x12\x0b\n\x03out\x18\x01 \x01(\t\x12\r\n\x05\x65rror\x18\x02 \x01(\t2^\n\x07Libvirt\x12+\n\tBlockPull\x12\x11.BlockPullRequest\x1a\t.Response\"\x00\x12&\n\tCopyImage\x12\x0c.CopyRequest\x1a\t.Response\"\x00\x62\x06proto3')
)




_BLOCKPULLREQUEST = _descriptor.Descriptor(
  name='BlockPullRequest',
  full_name='BlockPullRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domain', full_name='BlockPullRequest.domain', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='BlockPullRequest.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='base', full_name='BlockPullRequest.base', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17,
  serialized_end=79,
)


_COPYREQUEST = _descriptor.Descriptor(
  name='CopyRequest',
  full_name='CopyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vm_name', full_name='CopyRequest.vm_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_file_name', full_name='CopyRequest.image_file_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=81,
  serialized_end=136,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='out', full_name='Response.out', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='Response.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=138,
  serialized_end=176,
)

DESCRIPTOR.message_types_by_name['BlockPullRequest'] = _BLOCKPULLREQUEST
DESCRIPTOR.message_types_by_name['CopyRequest'] = _COPYREQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BlockPullRequest = _reflection.GeneratedProtocolMessageType('BlockPullRequest', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKPULLREQUEST,
  '__module__' : 'libvirt_pb2'
  # @@protoc_insertion_point(class_scope:BlockPullRequest)
  })
_sym_db.RegisterMessage(BlockPullRequest)

CopyRequest = _reflection.GeneratedProtocolMessageType('CopyRequest', (_message.Message,), {
  'DESCRIPTOR' : _COPYREQUEST,
  '__module__' : 'libvirt_pb2'
  # @@protoc_insertion_point(class_scope:CopyRequest)
  })
_sym_db.RegisterMessage(CopyRequest)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'libvirt_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  })
_sym_db.RegisterMessage(Response)



_LIBVIRT = _descriptor.ServiceDescriptor(
  name='Libvirt',
  full_name='Libvirt',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=178,
  serialized_end=272,
  methods=[
  _descriptor.MethodDescriptor(
    name='BlockPull',
    full_name='Libvirt.BlockPull',
    index=0,
    containing_service=None,
    input_type=_BLOCKPULLREQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CopyImage',
    full_name='Libvirt.CopyImage',
    index=1,
    containing_service=None,
    input_type=_COPYREQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LIBVIRT)

DESCRIPTOR.services_by_name['Libvirt'] = _LIBVIRT

# @@protoc_insertion_point(module_scope)
